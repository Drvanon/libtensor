INCLUDE=
#CFLAGS  = -O3 -g -DNABLE_ASSERT -DDEBUG=0 -DVIRT_NTD=1 -Wall -Wwrite-strings -DUSE_OMP -fopenmp -lm
CFLAGS  = -O2 -g -DNABLE_ASSERT -DDEBUG=0 -DVIRT_NTD=1 -Wall -Wwrite-strings -DUSE_OMP -fopenmp -lm
CFLAGS += -D__STDC_LIMIT_MACROS -I/home/dmatthews/src/cyclopstf/src/libtensor
CC	= mpicxx
CXX	= mpicxx
BLAS 	= -Wl,--start-group /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_intel_lp64.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_sequential.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_core.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_blacs_lp64.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_scalapack_lp64.a -Wl,--end-group -lpthread -lm 
LAPACK	=
#SCALA 	= -L/home/edgar/work/scalapack-2.0.1/lib -lscalapack 
#BLACS	= /home/edgar/work/BLACS/LIB/blacs_MPI-LINUX-0.a
#BLACS	+= /home/edgar/work/BLACS/LIB/blacsCinit_MPI-LINUX-0.a 
#BLACS	+= /home/edgar/work/BLACS/LIB/blacsF77init_MPI-LINUX-0.a 
#BLACS	+= /home/edgar/work/BLACS/LIB/blacs_MPI-LINUX-0.a

#the code supports openmp, pthreads (no thread pool yet), and TBB
#any one of the three should work, all are not needed
OPENMP  = -fopenmp
PTHREADS= -pthread
TBB	= -ltbb

LIBS 	= -Wl,--start-group /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_intel_lp64.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_sequential.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_core.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_blacs_lp64.a /share/apps/intel/Compiler/11.1/073/mkl/lib/em64t/libmkl_scalapack_lp64.a -Wl,--end-group -lpthread -lm 


ifneq (,$(findstring DTAU,$(DFLAGS)))
        include  $(TAUROOTDIR)/include/Makefile
        CFLAGS+=$(TAU_INCLUDE) $(TAU_DEFS) 
#       LIBS+=$(TAU_MPI_LIBS) $(TAU_LIBS) 
        LIBS+= $(TAU_LIBS)
endif

